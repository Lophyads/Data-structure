namespace ST{
	VII st;
	void build_st(VI& a){
		int n = a.size();
		int m = log(n) / log(2) + 1;
		st = VII(n, VI(m));
		for(int i = 0; i < n; i ++) st[i][0] = a[i];
		for(int j = 1; j < m; j ++){
			for(int i = 0; i + (1 << (j - 1)) < n; i ++)
				st[i][j] = max(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
		}
	}
	int query(int l, int r){
		int k = log(r - l + 1) / log(2);
		return max(st[l][k], st[r - (1 << k) + 1][k]);
	}
}
template<int N, int M> struct ST {
    int f[N][M], lg2[N];
    void build_st(int* a, int n) {
        lg2[1] = 0;
        lg2[2] = 1;a
        for (int i = 3; i < N; i++)
            lg2[i] = lg2[i / 2] + 1;
        for (int i = 0; i < n; i++)
            f[i][0] = a[i];
        for (int j = 1; j < M; j++)
            for (int i = 0; i + (1 << (j - 1)) < n; i++)
                f[i][j] = min(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);
    }
    int get_mi(int l, int r) {
        int k = lg2[r - l + 1];
        return min(f[l][k], f[r - (1 << k) + 1][k]);
    }
};